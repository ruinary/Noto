<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">


    <!-- COMMON BUTTON -->
    <Style  x:Key="CommonButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource ColorWhiteBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource ColorTransWhiteBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="6" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Margin="2,2">
                        <TextBlock Style="{DynamicResource CommonTitleTextH3}" Text="Войти"></TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ColorTransGrey1Brush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ColorTransGrey2Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- LOG IN BUTTON -->
    <Style  x:Key="LogInButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource ColorWhiteBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource ColorTransWhiteBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="6" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Margin="2,2">
                        <TextBlock Style="{DynamicResource CommonTitleTextH3}" Text="Войти"></TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ColorTransGrey1Brush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ColorTransGrey2Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- SIGN IN BUTTON -->
    <Style  x:Key="SignInButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource ColorWhiteBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource ColorTransWhiteBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="6" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Margin="2,2">
                        <TextBlock Style="{DynamicResource CommonTitleTextH3}" Text="Зарегистрироваться"></TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ColorTransGrey1Brush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ColorTransGrey2Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- APP USER BUTTON -->
    <Style  x:Key="UserButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource ColorWhiteBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource ColorTransWhiteBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="6" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Margin="2,2">
                        <materialDesign:PackIcon Foreground="{DynamicResource ColorWhiteBrush}" Kind="User" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ColorTransGrey1Brush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ColorTransGrey2Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- APP SETTINGS BUTTON -->
    <Style  x:Key="SettingsButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource ColorWhiteBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource ColorTransWhiteBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="6" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Margin="2,2">
                        <materialDesign:PackIcon Foreground="{DynamicResource ColorWhiteBrush}" Kind="Settings" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ColorTransGrey1Brush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ColorTransGrey2Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- APP ADD BUTTON -->
    <Style  x:Key="AddButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource ColorWhiteBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource ColorTransWhiteBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="6" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Margin="2,2">
                        <materialDesign:PackIcon Foreground="{DynamicResource ColorWhiteBrush}" Kind="Add" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ColorTransGrey1Brush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ColorTransGrey2Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- APP CALENDAR BUTTON -->
    <Style  x:Key="CalendarButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource ColorWhiteBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource ColorTransWhiteBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="6" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Margin="2,2">
                        <materialDesign:PackIcon Foreground="{DynamicResource ColorWhiteBrush}" Kind="Calendar" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ColorTransGrey1Brush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ColorTransGrey2Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- APP GRAPHIC BUTTON -->
    <Style  x:Key="GraficButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource ColorWhiteBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource ColorTransWhiteBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="6" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Margin="2,2">
                        <materialDesign:PackIcon Foreground="{DynamicResource ColorWhiteBrush}" Kind="ChartBellCurveCumulative" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ColorTransGrey1Brush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ColorTransGrey2Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- APP MORE BUTTON -->
    <Style x:Key="MoreButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource ColorWhiteBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource ColorTransWhiteBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="6" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Margin="2,2">
                        <materialDesign:PackIcon Foreground="{DynamicResource ColorWhiteBrush}" Kind="Apps" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ColorTransGrey1Brush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ColorTransGrey2Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- NOTICES BUTTON -->
    <Style x:Key="NoticesButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource ColorWhiteBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource ColorTransWhiteBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="6" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Margin="2,2">
                        <materialDesign:PackIcon Foreground="{DynamicResource ColorWhiteBrush}" Kind="BellOutline" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ColorTransGrey1Brush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ColorTransGrey2Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- APP CLOSE BUTTON -->
    <Style x:Key="WindowHeadButtonClose" TargetType="Button">
        <Setter Property="Foreground" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="Height" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse x:Name="elipsebutton" StrokeThickness="1" Fill="{DynamicResource ColorTransWhiteBrush}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="elipsebutton" Property="Fill" Value="{DynamicResource Color2Brush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="elipsebutton" Property="Fill" Value="{DynamicResource Color2Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- APP MINIMAZE BUTTON -->
    <Style x:Key="WindowHeadButtonCollapse" TargetType="Button">
        <Setter Property="Foreground" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="Height" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse x:Name="elipsebutton" StrokeThickness="1" Fill="{DynamicResource ColorTransWhiteBrush}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="elipsebutton" Property="Fill" Value="{DynamicResource Color3Brush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="elipsebutton" Property="Fill" Value="{DynamicResource Color3Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  -->
    <Style x:Key="DeskImageRec" TargetType="Rectangle">
        <Setter Property="Fill" Value="{x:Null}"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="200"/>
        <Setter Property="RadiusY" Value="20"/>
        <Setter Property="RadiusX" Value="20"/>
    </Style>

    <!--  -->
    <Style x:Key="DeskName" TargetType="TextBlock">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource ColorWhiteBrush}" />
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontSize" Value="70"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
    </Style>

    <!-- COMMON TEXTBOX -->
    <Style x:Key="CommonTextBox" TargetType="TextBox">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="MaxLength" Value="25"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource ColorWhiteBrush}" />
        <Setter Property="CaretBrush" Value="{DynamicResource ColorWhiteBrush}" />
        <Setter Property="FontSize" Value="35"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="/Res/#Veles"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource Color5Brush}"/>
    </Style>

    <!-- BACK COMMON TEXTBOX -->
    <Style x:Key="CommonBorderTextBox" TargetType="Border">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Color4Brush}"/>
        <Setter Property="Background" Value="{DynamicResource ColorTransWhiteBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ColorWhiteBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="CornerRadius" Value="6"/>
    </Style>
    
    <!-- EDIT IMG USER IN PROFILE -->
    <Style TargetType="Button"  x:Key="EditImgUser">
        <!--Set to true to not get any properties from the themes.-->
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Rectangle RadiusY="117" RadiusX="117" MinWidth="200" MinHeight="200" Fill="{TemplateBinding Background}"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property = "IsMouseOver" Value = "True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <Rectangle RadiusY="117" RadiusX="117" MinWidth="200" MinHeight="200" Fill="{TemplateBinding Background}"/>
                                <Rectangle RadiusY="117" RadiusX="117" MinWidth="200" MinHeight="200" Fill="Black" Opacity="0.5"/>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <materialDesign:PackIcon Kind="Edit" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#99FFFFFF" MinWidth="50" MinHeight="50"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- IMG TEAM -->
    <Style TargetType="Button"  x:Key="ImgTeam">
        <!--Set to true to not get any properties from the themes.-->
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Rectangle RadiusY="117" RadiusX="117" MinWidth="200" MinHeight="200" Fill="{TemplateBinding Background}"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property = "IsMouseOver" Value = "True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <Rectangle RadiusY="117" RadiusX="117" MinWidth="200" MinHeight="200" Fill="{TemplateBinding Background}"/>
                                <Rectangle RadiusY="117" RadiusX="117" MinWidth="200" MinHeight="200" Fill="Black" Opacity="0.5"/>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <materialDesign:PackIcon Kind="OpenInNew" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#99FFFFFF" MinWidth="50" MinHeight="50"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>